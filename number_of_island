// number_of_island.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include "pch.h"
#include <iostream>
#include <vector>
#include <queue>
using namespace std;

class Solution {
public:
	void dfs(vector<vector<int>>& gridd, int i, int j) {
		if (gridd.empty() || i < 0 || j < 0 || i >= gridd.size() || j >= gridd[0].size())
			return;
		gridd[i][j] = 0;
		if (i > 0  && gridd[i-1][j] == 1) dfs(gridd, i - 1, j);
		if (j > 0  && gridd[i][j-1] == 1) dfs(gridd, i , j - 1);

		if (i < gridd.size()-1 && gridd[i+1][j] == 1) dfs(gridd, i + 1, j);
		if (j < gridd[0].size()-1 && gridd[i][j+1] == 1) dfs(gridd, i, j + 1);
	}
	int numIslands(vector<vector<int>>& grid) {
		int output = 0;
		int nr = 0;
		int nc = 0; 
		if (!grid.empty()) {
			nr = grid.size();
			nc = grid[0].size();
		}
		cout << nc << nr << endl;
		for (int i=0;i<nr;i++)
			for (int j = 0; j < nc; j++)
			{
				if (grid[i][j] == 1)
				{
					output++;
					dfs(grid, i, j);
				}
			}
		return output;
	}
};

int main()
{
	vector<vector<int>> a = {
	{1,0,0,0,0,1},
	{0,1,1,0,0,1},
	{0,0,1,0,0,1} };
	Solution sol;
	cout << sol.numIslands(a);
  
}

