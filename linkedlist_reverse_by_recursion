#include "pch.h"
#include <iostream>

using namespace std;
struct Node {
	int value;
	Node * next;
};

void insert(Node ** head, int x)
{
	Node * temp = (Node *)malloc(sizeof(Node));
	temp->value = x;
	temp->next = NULL;
	if (*head != NULL)
		temp->next = *head;
	/*cout << "****" << endl;
	cout << temp << endl;
	cout << *head << endl;*/
	*head = temp;
}

void print(Node * beginingNode)
{
	cout << "List is" << endl;
	while (beginingNode != NULL)
	{
		cout << beginingNode->value << " " ;
		beginingNode = beginingNode->next;
	}
}

void Reverse_recursive(Node ** head, Node * node)
{
	if (node->next == NULL)
	{
		*head = node;
		return;
	}
	Node * right = node->next;
	Reverse_recursive(head, right);
	right->next = node  ;
	node->next = NULL;
}

void Reverse_travers(Node** head)
{
	if (*head == NULL)
		return;
	Node * pre=NULL;
	Node * cur;
	Node * next;
	
	cur = *head;
	//next = cur->next;
	while (cur!= NULL) {
		next = cur->next;
		cur->next = pre;
		pre = cur;
		cur = next;
	}
	*head = pre;
}

int main()
{
	Node * head = NULL;

	int input[3];
	input[0] = 11;
	input[1] = 22;
	input[2] = 33;
	//Node * head;
	//insert(&head, input[0]);
	//insert(&head, input[1]);
	insert(&head, input[2]);
	insert(&head, 44);
	print(head);
	cout<<endl;
	Reverse_travers(&head);
	//Reverse_recursive(&head,head);
	print(head);
