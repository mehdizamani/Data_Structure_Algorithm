
#include "pch.h"
#include <iostream>
#include <queue>
using namespace std;

struct BstNode {
	int value;
	BstNode * right;
	BstNode * left;
};

BstNode * GetANode(int value)
{
	BstNode * temp = new BstNode();
	temp->value = value;
	temp->left = temp->right = NULL;
	return temp;
}

BstNode * insert(BstNode * root, int val)
{
	if (root == NULL)
		root = GetANode(val);
	else if (val <= root->value)
		root->left = insert(root->left, val);
	else if (val > root->value)
		root->right = insert(root->right, val);
	return root;
}

// very very tricky recursive idea!!!!!
bool Binary_search_tree(BstNode * root, int lowerbnd, int upperbnd)
{
	if (root == NULL)
		return true;
	if ((root->value > lowerbnd) && (root->value < upperbnd)
		&& Binary_search_tree(root->right, root->value, upperbnd)
		&& Binary_search_tree(root->left, lowerbnd, root->value))
		return true;
	else
		return false;


}
bool IsItBST(BstNode * root)
{
	return Binary_search_tree(root, INT_MIN, INT_MAX);
}

int main()
{
	BstNode * temp = NULL;
	temp = insert(temp, 9);
	temp = insert(temp, 8);
	temp = insert(temp, 7);

	temp = insert(temp, 6);
	temp = insert(temp, 5);
	temp = insert(temp, 4);

	temp = insert(temp, 3);
	temp = insert(temp, 2);
	temp = insert(temp, 1);
	cout <<  " " << IsItBST(temp);
}
