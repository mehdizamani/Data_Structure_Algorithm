Given an array containing n distinct numbers taken from 0, 1, 2, ..., n, find the one that is missing from the array.

Example 1:

Input: [3,0,1]
Output: 2
Example 2:

Input: [9,6,4,2,3,5,7,0,1]
Output: 8



class Solution {
public:
    int missingNumber(vector<int>& nums) {
        /* 30% speed and 98% space
        int arr[nums.size() + 1] = {0};
        for (auto& i: nums)
            arr[i] = 1;
        int cntr = 0;
        for(auto& i: arr)
        {
            if(i == 0)
                return cntr;
            cntr++;
        }
        return 0;
        */
        
        /* 5% and 5%
        set<int> s;
        for (auto& i: nums)
            s.insert(i);
        for (int i = 0 ;i <= nums.size() ; i++)
        {
            if(s.count(i) == 0)
                return i;
        }
        return 0;
        */
         // speed 97%  space 95%
        int expectedSum = nums.size()*(nums.size() + 1)/2;
        int actualSum = 0;
        for (int num : nums) actualSum += num;
        return expectedSum - actualSum;
    }
};
