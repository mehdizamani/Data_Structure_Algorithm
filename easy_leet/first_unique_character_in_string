Given a string, find the first non-repeating character in it and return it's index. If it doesn't exist, return -1.

Examples:

s = "leetcode"
return 0.

s = "loveleetcode",
return 2.
Note: You may assume the string contain only lowercase letters.


class Solution {
public:
     // speed 100% space %100
        int firstUniqChar(string s) {
        int list[256] = {0};
        for(auto i: s)
            list[i] ++;
        for(int i=0; i<s.length();i++)
            if(list[s[i]]==1) return i;
        return -1;
    }
    // speed 19% space 35%
    /*int firstUniqChar(string s) {
        map<char, int> m;
        for(auto a: s)
            m[a] ++;
        int aa = 0;
        for(auto a: s)
        {
            if(m[a] == 1)
                return aa;
            aa++;
        }
        return -1; 
    }
    */
    // 5% speed and 71% space
    /*int firstUniqChar(string s) {
        map<char, int> m;
        for (int i = 0; i < s.length() ; i++)
        {
            if (m.find(s[i]) == m.end())
                m[s[i]] = i;
            else
                m[s[i]] = -1;
        }
        for(auto a: s)
            if(m[a] != -1)
                return m[a];
        return -1; 
    }*/
};
