


In an alien language, surprisingly they also use english lowercase letters, but possibly in a different order.
The order of the alphabet is some permutation of lowercase letters.

Given a sequence of words written in the alien language, and the order of the alphabet, return true if and only if
the given words are sorted lexicographicaly in this alien language.

 
Example 1:

Input: words = ["hello","leetcode"], order = "hlabcdefgijkmnopqrstuvwxyz"
Output: true
Explanation: As 'h' comes before 'l' in this language, then the sequence is sorted.
Example 2:

Input: words = ["word","world","row"], order = "worldabcefghijkmnpqstuvxyz"
Output: false
Explanation: As 'd' comes after 'l' in this language, then words[0] > words[1], hence the sequence is unsorted.
Example 3:

Input: words = ["apple","app"], order = "abcdefghijklmnopqrstuvwxyz"
Output: false
Explanation: The first three characters "app" match, and the second string is shorter (in size.) According to
lexicographical rules "apple" > "app", because 'l' > '∅', where '∅' is defined as the blank character which is less
than any other character

class Solution {
public:

 //   speed 98% and spcace 53%
    bool isAlienSorted(vector<string>& words, string order) {
        map<char, int> m;
        for (int i = 0; i < order.length() ; i++)
            m[order[i]] = i;
        for (int i = 0 ; i < words.size() - 1 ; i++)
        {
            int cntr = 0;
            int size1 = words[i].length();
            int size2 = words[i+1].length();
            while(words[i][cntr] == words[i+1][cntr] && cntr < size1 && cntr < size2)
                cntr++;
            if (m.find(words[i][cntr])->second < m.find(words[i+1][cntr])->second )
                continue;
            else
                return false;
        }
        
        return true;
    }
};
