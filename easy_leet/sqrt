
Implement int sqrt(int x).

Compute and return the square root of x, where x is guaranteed to be a non-negative integer.

Since the return type is an integer, the decimal digits are truncated and only the integer part of the result is returned.

Example 1:

Input: 4
Output: 2
Example 2:

Input: 8
Output: 2
Explanation: The square root of 8 is 2.82842..., and since 
             the decimal part is truncated, 2 is returned.
             
             
class Solution {
public:
// speed 75% , space 100%
    int mySqrt(int x) {
     if (x==0)
         return 0;
     if (x==1)
         return 1;
    int start = x/2;
    long r = (long) start * start;  // importante to use long wen we want to keep squar values
     while(r > x)
         r >>= 1;
    int l = 2;  
    while( l < r  )
     {   
         long m = (r + l) / 2;
         if (m * m > x)
             r = m;
         else if ( m * m < x)
             l = m + 1;
         else return m;
          
     }
        return l-1;
    }
        
};
