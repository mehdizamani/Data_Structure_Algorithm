Remove all elements from a linked list of integers that have value val.

Example:

Input:  1->2->6->3->4->5->6, val = 6
Output: 1->2->3->4->5





/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */


// 95% vs 12%  LEETCODE, by introducing a dummy node called sentinel
class Solution {
  public:
  ListNode* removeElements(ListNode* head, int val) {
    ListNode* sentinel = new ListNode(0);
    sentinel->next = head;

    ListNode *prev = sentinel, *curr = head, *toDelete = nullptr;
    while (curr != nullptr) {
      if (curr->val == val) {
        prev->next = curr->next;
        toDelete = curr;
      } else prev = curr;

      curr = curr->next;

      if (toDelete != nullptr) {
        delete toDelete;
        toDelete = nullptr;
      }
    }

    ListNode *ret = sentinel->next;
    delete sentinel;
    return ret;
  }
};


/// MY answer 67% and 12%
/*
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        if(!head)
            return head;
        while(head && head -> val == val)
        {
            ListNode* temp = head;
             head = head -> next;
            delete temp;
            temp = nullptr;
        }
        ListNode* back = head; 
        while(head && head -> next)
        {
            if((head -> next ) -> val == val)
            {
                ListNode* temp = head -> next ;
                head -> next = temp -> next;
                delete temp; 
                temp = nullptr;
               if(!head)
                    break;
                continue;
            }
            if (head)
                head = head -> next;
        }
        if (head && head -> val == val)
        {
            delete head;
            head = nullptr;
        }
       
        return back;
    }
};*/
