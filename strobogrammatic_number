A strobogrammatic number is a number that looks the same when rotated 180 degrees (looked at upside down).

Write a function to determine if a number is strobogrammatic. The number is represented as a string.

Example 1:

Input:  "69"
Output: true
Example 2:

Input:  "88"
Output: true
Example 3:

Input:  "962"
Output: false


class Solution {
public:
    bool isItOneZeroEigth(char c)
    {
        if (c == '1' || c == '8' || c == '0')
            return true;
        else
            return false;
    }
    bool isStrobogrammatic(string num) {
        
        if ((num.length() & 1) && (!isItOneZeroEigth(num[(num.length()>>1)])))
            return false;
        stack<int> st;
        for (int i = 0 ; i < (num.length() >> 1) ; i++ )
           st.push(num[i]);
        int start = 0 ;
        if (num.length() & 1)
            start = (num.length() >> 1) + 1;
        else 
            start = (num.length() >> 1);
        for (int i = start ; i < num.length() ; i++ )
        {
            switch (num[i])
            {
                case '9':
                    if (st.top() != '6')
                        return false;
                    break;   
                case '6':
                    if (st.top() != '9')
                        return false;
                    break;
                
                case '0':
                    if (st.top() != '0')
                        return false;
                    break;      
                case '8':
                    if (st.top() != '8')
                        return false;
                    break;
                          
                case '1':
                    if (st.top() != '1')
                        return false;
                    break;
                default:
                    return false;
             }
            st.pop(); 
        }
        return true;
    }
};
